{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","components/project/ProjectDropDown.js","components/common/Header.js","components/App.js","components/home/HomePage.js","components/about/AboutPage.js","components/json/fileData.js","components/json/config.js","components/configuration/configEditPage.js","components/configuration/ConfigurationPage.js","components/execution/ExecutionPage.js","components/json/emailAliases.js","components/configuration/emailAliasePage.js","components/configuration/processStatusEditPage.js","routes.js","components/configuration/repoTypePage.js","index.js"],"names":["module","exports","__webpack_require__","p","Component","Boolean","window","location","hostname","match","options","defaultOption","AboutPage","react_default","a","createElement","className","dist_default","value","placeholder","React","Header","_ref","loading","ProjectDropDown","es","to","activeClassName","App","common_Header","this","props","children","HomePage","files","id","fileName","x","repospath","sonarCommand","sonarCommandWithoutType","cleanuprepos","ciceroServerHost","ciceroServerPort","anamolyLOCCount","anamolyLOCCountPerCommit","exCludeFiles","projectName","ConfigEditPage","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","config","handleChange","bind","assertThisInitialized","handleSubmit","event","setState","target","alert","preventDefault","onSubmit","ConfigurationPage","files1","key","href","configEditPage","fileNameq","map","createFileRow","ExecutionPage","email","alias","EmailAliasesPage","console","log","address","element","_this2","onClick","readFile","fs","_this3","handleClick","ReactDOM","render","document","getElementById","createRow1","ProcessStatusEditPage","routes","path","component","history","browserHistory","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mRCItBC,YCMEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,uFCbAC,SAAU,CACZ,KAAM,OAAQ,WAEZC,EAAgBD,EAAQ,GAafE,mLATP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAUJ,QAASA,EAASQ,MAAOP,EAAeQ,YAAY,6BALtDC,IAAMhB,WCcfiB,EAlBA,SAAAC,GAAiBA,EAAdC,QACd,OACIV,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,uBACJF,EAAAC,EAAAC,cAACS,EAAD,MACAX,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAWC,GAAG,IAAIC,gBAAgB,UAAlC,iBACC,MAKDd,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,GAAG,aAAaC,gBAAgB,UAAtC,gBCGDC,mLAbX,OACEf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAACc,EAAD,MACGC,KAAKC,MAAMC,iBALFZ,IAAMhB,WCUT6B,mLATP,OACIpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,GAAG,QAAQV,UAAU,0BAA3B,sBALOI,IAAMhB,WCAvBM,EAAU,CACZ,MAAO,MAAO,SAEZC,EAAgBD,EAAQ,GCNnBwB,GDQad,IAAMhB,UCRX,CACf,CACI+B,GAAI,EACJC,SAAU,eAEd,CACID,GAAI,EACJC,SAAU,iBAEd,CACID,GAAI,EACJC,SAAU,wBAEd,CACID,GAAI,EACJC,SAAU,sBAEd,CACID,GAAI,EACJC,SAAU,uBCjBPC,EAAE,CAAC,CACVC,UAAY,QACZC,aAAe,ySACfC,wBAA0B,2QAC1BC,aAAe,8CACfC,iBAAmB,iBACnBC,iBAAmB,OACtBC,gBAAkB,IACfC,yBAA2B,IAC3BC,aAAe,CAAC,qBAChBC,YAAc,mBCwBHC,cAhCX,SAAAA,EAAYjB,GAAO,IAAAkB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAApB,KAAAkB,IACfC,EAAAC,OAAAE,EAAA,EAAAF,CAAApB,KAAAoB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAxB,KAAMC,KACDwB,MAAQ,CAAErC,MAAOsC,GAEtBP,EAAKQ,aAAeR,EAAKQ,aAAaC,KAAlBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KACpBA,EAAKW,aAAeX,EAAKW,aAAaF,KAAlBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KALLA,4EAQNY,GACT/B,KAAKgC,SAAS,CAAE5C,MAAO2C,EAAME,OAAO7C,6CAG3B2C,GACTG,MAAM,yBAA2BlC,KAAKyB,MAAMrC,OAC5C2C,EAAMI,mDAGA/C,qCAKN,OACIL,EAAAC,EAAAC,cAAA,QAAMmD,SAAUpC,KAAK8B,cACjB/C,EAAAC,EAAAC,cAAA,sBAzBaK,IAAMhB,WCiDpB+D,cA9CX,SAAAA,IAAc,IAAAlB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAApB,KAAAqC,IACVlB,EAAAC,OAAAE,EAAA,EAAAF,CAAApB,KAAAoB,OAAAG,EAAA,EAAAH,CAAAiB,GAAAb,KAAAxB,QACKyB,MAAQ,CAAErB,MAAOkC,GAFZnB,6EAKAf,GACVJ,KAAKgC,SAAS,CAAC1B,SAASF,EAAME,iDAIpBF,GACV,OACIrB,EAAAC,EAAAC,cAAA,MAAIsD,IAAKnC,EAAMC,IACXtB,EAAAC,EAAAC,cAAA,UAAKmB,EAAMC,IACXtB,EAAAC,EAAAC,cAAA,UAAKmB,EAAME,UACXvB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGuD,KAAMpC,EAAME,SAAS,QAAxB,2CAMZ,OAAGN,KAAKyB,MAAMnB,SAEVvB,EAAAC,EAAAC,cAACwD,EAAD,CAAgBnC,SAAUN,KAAKyB,MAAMiB,YAIrC3D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,6BAEAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,uCAGRF,EAAAC,EAAAC,cAAA,aACKe,KAAKyB,MAAMrB,MAAMuC,IAAI3C,KAAK4C,cAAe5C,gBAvClCV,IAAMhB,WCOvBuE,mLARP,OACI9D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,oCAJYK,IAAMhB,WCFvBiC,EAAI,CACX,CACIuC,MAAO,wBACPC,MAAO,yBAEX,CACID,MAAO,qBACPC,MAAO,sBAEX,CACID,MAAO,uCACPC,MAAO,wCAEX,CACID,MAAO,iDACPC,MAAO,kDAEX,CACID,MAAO,8BACPC,MAAO,+BAEX,CACID,MAAO,8BACPC,MAAO,+BAEX,CACID,MAAO,4BACPC,MAAO,6BAEX,CACID,MAAO,sBACPC,MAAO,uBAEX,CACID,MAAO,8BACPC,MAAO,+BAEX,CACID,MAAO,oBACPC,MAAO,qBAEX,CACID,MAAO,sBACPC,MAAO,uBAEX,CACID,MAAO,oBACPC,MAAO,8BC2BAC,cApEX,SAAAA,IAAc,IAAA7B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAApB,KAAAgD,GACV7B,EAAAC,OAAAE,EAAA,EAAAF,CAAApB,KAAAoB,OAAAG,EAAA,EAAAH,CAAA4B,GAAAxB,KAAAxB,OACAiD,QAAQC,IAAI3C,GACZY,EAAKM,MAAQ,CAAE0B,QAAS5C,GAHdY,0EAKHgC,GAAS,IACZC,EADYC,EAAArD,KAShB,OANIoD,EADiB,yBAAjBD,EAAQL,MACE/D,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,UAAKkE,EAAQL,OAAW/D,EAAAC,EAAAC,cAAA,UAAKkE,EAAQJ,QAI1ChE,EAAAC,EAAAC,cAAA,UAAKkE,EAAQJ,OAGvBhE,EAAAC,EAAAC,cAAA,MAAIsD,IAAKY,EAAQL,OAEZM,EACDrE,EAAAC,EAAAC,cAAA,MAAIqE,QAAS,kBAAMD,EAAKE,aAAxB,4CAMR,IAAIhD,EAAEiD,WAAY,eAClBP,QAAQC,IAAI3C,qCAEN4C,GAAS,IAAAM,EAAAzD,KAEf,OACIjB,EAAAC,EAAAC,cAAA,MAAIsD,IAAKY,EAAQL,OACb/D,EAAAC,EAAAC,cAAA,UAAKkE,EAAQL,OACK,yBAAjBK,EAAQL,MACL/D,EAAAC,EAAAC,cAAA,cAAQkE,EAAQJ,OAEhBhE,EAAAC,EAAAC,cAAA,MAAIqE,QAAS,kBAAMG,EAAKC,YAAYP,EAAQL,SAA5C,6CAKJvC,GAERoD,IAASC,OACL7E,EAAAC,EAAAC,cAAA,aAAQsB,GAAYsD,SAASC,eAAe,uCAIhD,OACI/E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKoB,GAAG,MACRtB,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,uBAGRF,EAAAC,EAAAC,cAAA,aACKe,KAAKyB,MAAM0B,QAAQR,IAAI3C,KAAK+D,WAAY/D,iBA5DtCV,IAAMhB,WCOtB0F,mLARP,OACIjF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,gDAJoBK,IAAMhB,WCWtC2F,GCVuB3E,IAAMhB,UDU7BS,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAOuE,KAAK,IAAIC,UAAWrE,GACvBf,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAYwE,UAAW9B,IACvBtD,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAOuE,KAAK,OAAOC,UAAWhE,IAC9BpB,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAOuE,KAAK,YAAYC,UAAWtB,IACnC9D,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAOuE,KAAK,kBAAkBC,UAAWjD,IACzCnC,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAOuE,KAAK,wBAAwBC,UAAWnB,IAC/CjE,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAOuE,KAAK,yBAAyBC,UAAWH,YETxDL,IAASC,OAAQ7E,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQyE,QAASC,IAAgBJ,OAAQA,IAAYJ,SAASC,eAAe,ShB+GxF,kBAAmBQ,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.fe137274.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport Dropdown from 'react-dropdown'\r\nimport 'react-dropdown/style.css'\r\nconst options = [\r\n    '5c', 'mist', 'vulcan'\r\n]\r\nconst defaultOption = options[0]\r\n\r\nclass AboutPage extends React.Component {        \r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron\">\r\n                <h6>Select Project:</h6>\r\n                <Dropdown options={options} value={defaultOption} placeholder=\"Select an option\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AboutPage;","import React, { PropTypes } from 'react';\r\nimport { Link, IndexLink } from 'react-router';\r\nimport ProjectDropDown from '../project/ProjectDropDown';\r\n\r\nconst Header = ({ loading }) => {\r\n    return (\r\n        <div>\r\n            <h1><b>Talentica</b></h1>\r\n            <ProjectDropDown/>\r\n            <nav>\r\n                <IndexLink to=\"/\" activeClassName=\"active\">Configuration</IndexLink>\r\n                {\" | \"}\r\n                {/* <IndexLink to=\"/home\" activeClassName=\"active\">Home</IndexLink>\r\n                {\" | \"}\r\n                <IndexLink to=\"/courses\" activeClassName=\"active\">Courses</IndexLink>\r\n                {\" | \"} */}\r\n                <Link to=\"/execution\" activeClassName=\"active\">Execution</Link>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","// This component handles the App template used on every page.\nimport React from 'react';\nimport Header from './common/Header';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"container-fluid\">\n      <Header/>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\n// App.propTypes = {\n//   children: PropTypes.object.isRequired,\n// };\n\nexport default App;\n","import React from 'react';\r\nimport { Link } from 'react-router';\r\n\r\nclass HomePage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron\">\r\n                <p>Talentica Administration</p>\r\n                <Link to=\"about\" className=\"btn btn-primary btn-lg\">Learn More</Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport Dropdown from 'react-dropdown'\r\nimport 'react-dropdown/style.css'\r\nconst options = [\r\n    'one', 'two', 'three'\r\n]\r\nconst defaultOption = options[0]\r\n\r\nclass AboutPage extends React.Component {\r\nconstructor(){\r\n    super();\r\n   this.setState(options);\r\n}        \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Dropdown options={options} value={defaultOption} placeholder=\"Select an option\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default AboutPage;","export var files = [\r\n    {\r\n        id: 1,\r\n        fileName: 'config.json'\r\n    },\r\n    {\r\n        id: 2,\r\n        fileName: 'repoType.json'\r\n    },\r\n    {\r\n        id: 3,\r\n        fileName: 'git-log-anamoly.json'\r\n    },\r\n    {\r\n        id: 4,\r\n        fileName: 'processStatus.json'\r\n    },\r\n    {\r\n        id: 5,\r\n        fileName: 'emailAliases.json'\r\n    },\r\n];\r\n ","\r\n\r\nexport let x=[{\r\n    \"repospath\":\"repos\",\r\n    \"sonarCommand\":\"\\\"../../sonar-scanner/bin/sonar-scanner.bat\\\" -Dsonar.host.url=http://172.19.101.120:9393 -Dsonar.login=2dcd3909dd3091d5b81cf5fbe1eede589bf8f221 -Dsonar.java.binaries=../../sonar-scanner/lib/ -Dsonar.projectName=$reponame -Dsonar.projectKey=$reponame -Dsonar.sources=./ -Dsonar.language=$repotype\",\r\n    \"sonarCommandWithoutType\":\"\\\"../../sonar-scanner/bin/sonar-scanner\\\" -Dsonar.host.url=http://172.19.101.120:9393 -Dsonar.login=2dcd3909dd3091d5b81cf5fbe1eede589bf8f221 -Dsonar.java.binaries=../../sonar-scanner/lib/ -Dsonar.projectName=$reponame -Dsonar.projectKey=$reponame -Dsonar.sources=./ \",\r\n    \"cleanuprepos\":\"Drones-SW-DartService,Drones-SW-DartService\",\r\n    \"ciceroServerHost\":\"172.19.101.120\",\r\n    \"ciceroServerPort\":\"9393\",\r\n\t\"anamolyLOCCount\":1000,\r\n    \"anamolyLOCCountPerCommit\":5000,\r\n    \"exCludeFiles\":[\"package-lock.json\"],\r\n    \"projectName\":\"vulcan\"\r\n}]\r\n\r\n","import React from 'react';\r\nimport * as config from '../json/config'\r\n\r\nclass ConfigEditPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: config.x };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ value: event.target.value });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        alert('A name was submitted: ' + this.state.value);\r\n        event.preventDefault();\r\n    }\r\n\r\n    createRow(value){\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <table>\r\n\r\n                </table>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfigEditPage;\r\n","import React from 'react';\r\nimport * as files1 from '../json/fileData';\r\nimport * as config from '../json/config';\r\nimport ConfigEditPage from './configEditPage';\r\n\r\nclass ConfigurationPage extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { files: files1.files };\r\n    }\r\n\r\n    onclickHandle(files){\r\n        this.setState({fileName:files.fileName})\r\n        \r\n    }\r\n\r\n    createFileRow(files) {\r\n        return (\r\n            <tr key={files.id}>\r\n                <td>{files.id}</td>\r\n                <td>{files.fileName}</td>\r\n                <td><a href={files.fileName+\"edit\"} >Edit</a></td>\r\n            </tr>\r\n        );\r\n    }\r\n    render() {\r\n\r\n        if(this.state.fileName)\r\n        return (\r\n            <ConfigEditPage fileName={this.state.fileNameq}></ConfigEditPage>\r\n        )\r\n\r\n        return (\r\n            <div>\r\n                <h1>Configurations:</h1>\r\n\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Configuration File Name</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.files.map(this.createFileRow, this)}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfigurationPage;","import React from 'react';\r\n\r\nclass ExecutionPage extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>execution here</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExecutionPage;","export let x = [\r\n    {\r\n        email: 'calvin.iyer@gmail.com',\r\n        alias: 'calvin.iyer@gmail.com'\r\n    },\r\n    {\r\n        email: \"t-karli@vulcan.com\",\r\n        alias: \"t-karli@vulcan.com\"\r\n    },\r\n    {\r\n        email: \"calvin-iyer@users.noreply.github.com\",\r\n        alias: \"calvin-iyer@users.noreply.github.com\"\r\n    },\r\n    {\r\n        email: \"37868878+pankajpardhi@users.noreply.github.com\",\r\n        alias: \"37868878+pankajpardhi@users.noreply.github.com\"\r\n    },\r\n    {\r\n        email: \"gaurav.sharma@talentica.com\",\r\n        alias: \"gaurav.sharma@talentica.com\"\r\n    },\r\n    {\r\n        email: \"Pankaj.Pardhi@talentica.com\",\r\n        alias: \"pankaj.pardhi@talentica.com\"\r\n    },\r\n    {\r\n        email: \"PankajP@talentica-all.com\",\r\n        alias: \"pankajp@talentica-all.com\"\r\n    },\r\n    {\r\n        email: \"sailajay@vulcan.com\",\r\n        alias: \"sailajay@vulcan.com\"\r\n    },\r\n    {\r\n        email: \"Gaurav.Sharma@talentica.com\",\r\n        alias: \"gaurav.sharma@talentica.com\"\r\n    },\r\n    {\r\n        email: \"johnch@vulcan.com\",\r\n        alias: \"johnch@vulcan.com\"\r\n    },\r\n    {\r\n        email: \"t-tylers@vulcan.com\",\r\n        alias: \"t-tylers@vulcan.com\"\r\n    },\r\n    {\r\n        email: \"tsellon@gmail.com\",\r\n        alias: \"tsellon@gmail.com\"\r\n    }\r\n];\r\n\r\n","import React from 'react';\r\nimport { x } from '../json/emailAliases';\r\nimport ReactDOM from 'react-dom';\r\nimport * as fs from 'fs';\r\n\r\nclass EmailAliasesPage extends React.Component {\r\n    constructor() {\r\n        super();\r\n        console.log(x);\r\n        this.state = { address: x };\r\n    }\r\n    createRow1(address) {\r\n        let element;\r\n        if (address.email != \"calvin.iyer@gmail.com\") {\r\n            element = <div><td>{address.email}</td><td>{address.alias}</td></div>\r\n\r\n        }\r\n        else {\r\n            element = <td>{address.alias}</td>\r\n        }\r\n        return (\r\n            <tr key={address.email}>\r\n\r\n                {element}\r\n                <td onClick={() => this.readFile()}>Edit</td>\r\n\r\n            </tr>\r\n        );\r\n    }\r\n    readFile(){\r\n        let x=fs.readFile(\"E:\\\\abc.txt\");\r\n        console.log(x);\r\n    }\r\n    createRow(address) {\r\n\r\n        return (\r\n            <tr key={address.email}>\r\n                <td>{address.email}</td>\r\n                {address.email == \"calvin.iyer@gmail.com\" ? (\r\n                    < td > {address.alias}</td>\r\n                ) :\r\n                    <td onClick={() => this.handleClick(address.email)}>Edit</td>\r\n                }\r\n            </tr>\r\n        );\r\n    }\r\n    handleClick(x) {\r\n        // let test=JSON.stringify(x);\r\n        ReactDOM.render(\r\n            <label>{x}</label>, document.getElementById(\"x\")\r\n        );\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"x\"></div>\r\n                <form>\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Email</th>\r\n                                <th>Aliases</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.address.map(this.createRow1, this)}\r\n                        </tbody>\r\n                    </table>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EmailAliasesPage;","import React from 'react';\r\n\r\nclass ProcessStatusEditPage extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>ProcessStatusEditPage here</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProcessStatusEditPage;","import React from 'react';\r\nimport { Route, IndexRoute } from 'react-router';\r\nimport App from './components/App';\r\nimport HomePage from './components/home/HomePage';\r\nimport AboutPage from './components/about/AboutPage';\r\nimport ConfigurationPage from './components/configuration/ConfigurationPage';\r\nimport ExecutionPage from './components/execution/ExecutionPage';\r\nimport ConfigEditPage from './components/configuration/configEditPage';\r\nimport EmailAliasesPage from './components/configuration/emailAliasePage';\r\nimport ProcessStatusEditPage from './components/configuration/processStatusEditPage';\r\nimport RepoTypePage from './components/configuration/repoTypePage';\r\n\r\nexport default (\r\n    <Route path=\"/\" component={App}>\r\n        <IndexRoute component={ConfigurationPage} />\r\n        <Route path=\"home\" component={HomePage} />\r\n        <Route path=\"execution\" component={ExecutionPage} />\r\n        <Route path=\"config.jsonedit\" component={ConfigEditPage} />\r\n        <Route path=\"emailAliases.jsonedit\" component={EmailAliasesPage} />\r\n        <Route path=\"processStatus.jsonedit\" component={ProcessStatusEditPage} />\r\n    </Route>\r\n);\r\n","import React from 'react';\r\n//import {repoType} from '../json/repoType';\r\n\r\nclass RepoTypePage extends React.Component {\r\n    constructor() {\r\n        super();\r\n        var t = [];\r\n        let repoType=[];\r\n        console.log(repoType);\r\n        for (let x of repoType) {\r\n            t.push({\r\n                key: x.key,\r\n                value: x.value\r\n            });\r\n        }\r\n        console.log(t);\r\n        // this.state = { repoType: t };\r\n        // console.log(repoType);\r\n    }\r\n    createFileRow(repoType) {\r\n        return (\r\n            <tr key={repoType.key}>\r\n                <td>{repoType.key}</td>\r\n                <td>{repoType.value}</td>\r\n            </tr>\r\n        );\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Configurations:</h1>\r\n\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Repo Name</th>\r\n                            <th>Repo Type</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.t.map(this.createFileRow, this)}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RepoTypePage;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport routes from './routes';\nimport { Router, browserHistory } from 'react-router';\nimport './bootstrap.min.css';\n\n\nReactDOM.render( <Router history={browserHistory} routes={routes} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}